
calc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000694  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  00000694  00000708  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000073a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000076c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  000007a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000183a  00000000  00000000  000008a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000097d  00000000  00000000  000020e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bc5  00000000  00000000  00002a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000224  00000000  00000000  00003624  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005aa  00000000  00000000  00003848  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000119c  00000000  00000000  00003df2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00004f8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e9       	ldi	r30, 0x94	; 148
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 39       	cpi	r26, 0x92	; 146
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 78 01 	call	0x2f0	; 0x2f0 <main>
  7a:	0c 94 48 03 	jmp	0x690	; 0x690 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <KEYPAD_GetKey>:
		DIO_WritePin(FIRST_OUTPUT+r,HIGH);
	}
}

uint8_t KEYPAD_GetKey(void)
{
  82:	ef 92       	push	r14
  84:	ff 92       	push	r15
  86:	0f 93       	push	r16
  88:	1f 93       	push	r17
  8a:	cf 93       	push	r28
  8c:	df 93       	push	r29
	uint8_t f,r,c,key=NO_KEY;
  8e:	0f 2e       	mov	r0, r31
  90:	f4 e5       	ldi	r31, 0x54	; 84
  92:	ef 2e       	mov	r14, r31
  94:	f0 2d       	mov	r31, r0
	for (r=0;r<ROWS;r++)
  96:	10 e0       	ldi	r17, 0x00	; 0
  98:	3e c0       	rjmp	.+124    	; 0x116 <KEYPAD_GetKey+0x94>
	{
		DIO_WritePin(FIRST_OUTPUT+r,LOW);
  9a:	02 e1       	ldi	r16, 0x12	; 18
  9c:	01 0f       	add	r16, r17
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	80 2f       	mov	r24, r16
  a2:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
		f=0;
		
		for(c=0;c<COLS+1;c++)
  a6:	c0 e0       	ldi	r28, 0x00	; 0
{
	uint8_t f,r,c,key=NO_KEY;
	for (r=0;r<ROWS;r++)
	{
		DIO_WritePin(FIRST_OUTPUT+r,LOW);
		f=0;
  a8:	f1 2c       	mov	r15, r1
		
		for(c=0;c<COLS+1;c++)
  aa:	2e c0       	rjmp	.+92     	; 0x108 <KEYPAD_GetKey+0x86>
		{
			if(c!=1)
  ac:	c1 30       	cpi	r28, 0x01	; 1
  ae:	49 f1       	breq	.+82     	; 0x102 <KEYPAD_GetKey+0x80>
			{
				
				if (DIO_ReadPin(FIRST_INPUT+c)==LOW)
  b0:	db e1       	ldi	r29, 0x1B	; 27
  b2:	dc 0f       	add	r29, r28
  b4:	8d 2f       	mov	r24, r29
  b6:	0e 94 92 02 	call	0x524	; 0x524 <DIO_ReadPin>
  ba:	81 11       	cpse	r24, r1
  bc:	24 c0       	rjmp	.+72     	; 0x106 <KEYPAD_GetKey+0x84>
				{
					key=KeysArr[r][c-f];
  be:	81 2f       	mov	r24, r17
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	2c 2f       	mov	r18, r28
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	2f 19       	sub	r18, r15
  c8:	31 09       	sbc	r19, r1
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	80 5a       	subi	r24, 0xA0	; 160
  d4:	9f 4f       	sbci	r25, 0xFF	; 255
  d6:	fc 01       	movw	r30, r24
  d8:	e2 0f       	add	r30, r18
  da:	f3 1f       	adc	r31, r19
  dc:	e0 80       	ld	r14, Z
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	8f ed       	ldi	r24, 0xDF	; 223
  e0:	9e e2       	ldi	r25, 0x2E	; 46
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <KEYPAD_GetKey+0x60>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <KEYPAD_GetKey+0x66>
  e8:	00 00       	nop
					_delay_ms(3);
					while(DIO_ReadPin(FIRST_INPUT+c)==LOW);
  ea:	8d 2f       	mov	r24, r29
  ec:	0e 94 92 02 	call	0x524	; 0x524 <DIO_ReadPin>
  f0:	88 23       	and	r24, r24
  f2:	d9 f3       	breq	.-10     	; 0xea <KEYPAD_GetKey+0x68>
  f4:	8f ed       	ldi	r24, 0xDF	; 223
  f6:	9e e2       	ldi	r25, 0x2E	; 46
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <KEYPAD_GetKey+0x76>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <KEYPAD_GetKey+0x7c>
  fe:	00 00       	nop
 100:	02 c0       	rjmp	.+4      	; 0x106 <KEYPAD_GetKey+0x84>
					
				}
			}
			else
			{
				f=1;
 102:	ff 24       	eor	r15, r15
 104:	f3 94       	inc	r15
	for (r=0;r<ROWS;r++)
	{
		DIO_WritePin(FIRST_OUTPUT+r,LOW);
		f=0;
		
		for(c=0;c<COLS+1;c++)
 106:	cf 5f       	subi	r28, 0xFF	; 255
 108:	c5 30       	cpi	r28, 0x05	; 5
 10a:	80 f2       	brcs	.-96     	; 0xac <KEYPAD_GetKey+0x2a>
			else
			{
				f=1;
			}
		}
		DIO_WritePin(FIRST_OUTPUT+r,HIGH);
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	80 2f       	mov	r24, r16
 110:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
}

uint8_t KEYPAD_GetKey(void)
{
	uint8_t f,r,c,key=NO_KEY;
	for (r=0;r<ROWS;r++)
 114:	1f 5f       	subi	r17, 0xFF	; 255
 116:	14 30       	cpi	r17, 0x04	; 4
 118:	08 f4       	brcc	.+2      	; 0x11c <KEYPAD_GetKey+0x9a>
 11a:	bf cf       	rjmp	.-130    	; 0x9a <KEYPAD_GetKey+0x18>
			}
		}
		DIO_WritePin(FIRST_OUTPUT+r,HIGH);
	}
	return key;
}
 11c:	8e 2d       	mov	r24, r14
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	1f 91       	pop	r17
 124:	0f 91       	pop	r16
 126:	ff 90       	pop	r15
 128:	ef 90       	pop	r14
 12a:	08 95       	ret

0000012c <WriteIns>:
	{
		WriteIns(0x94+cell);
	}
	else if (line==4)
	{
		WriteIns(0xd4+cell);
 12c:	cf 93       	push	r28
 12e:	c8 2f       	mov	r28, r24
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	83 e0       	ldi	r24, 0x03	; 3
 134:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 138:	6c 2f       	mov	r22, r28
 13a:	66 1f       	adc	r22, r22
 13c:	66 27       	eor	r22, r22
 13e:	66 1f       	adc	r22, r22
 140:	8c e0       	ldi	r24, 0x0C	; 12
 142:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 146:	c6 fb       	bst	r28, 6
 148:	66 27       	eor	r22, r22
 14a:	60 f9       	bld	r22, 0
 14c:	8a e0       	ldi	r24, 0x0A	; 10
 14e:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 152:	c5 fb       	bst	r28, 5
 154:	66 27       	eor	r22, r22
 156:	60 f9       	bld	r22, 0
 158:	89 e0       	ldi	r24, 0x09	; 9
 15a:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 15e:	c4 fb       	bst	r28, 4
 160:	66 27       	eor	r22, r22
 162:	60 f9       	bld	r22, 0
 164:	88 e0       	ldi	r24, 0x08	; 8
 166:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 16a:	61 e0       	ldi	r22, 0x01	; 1
 16c:	82 e0       	ldi	r24, 0x02	; 2
 16e:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 172:	8f e9       	ldi	r24, 0x9F	; 159
 174:	9f e0       	ldi	r25, 0x0F	; 15
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <WriteIns+0x4a>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <WriteIns+0x50>
 17c:	00 00       	nop
 17e:	60 e0       	ldi	r22, 0x00	; 0
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 186:	8f e9       	ldi	r24, 0x9F	; 159
 188:	9f e0       	ldi	r25, 0x0F	; 15
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <WriteIns+0x5e>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <WriteIns+0x64>
 190:	00 00       	nop
 192:	c3 fb       	bst	r28, 3
 194:	66 27       	eor	r22, r22
 196:	60 f9       	bld	r22, 0
 198:	8c e0       	ldi	r24, 0x0C	; 12
 19a:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 19e:	c2 fb       	bst	r28, 2
 1a0:	66 27       	eor	r22, r22
 1a2:	60 f9       	bld	r22, 0
 1a4:	8a e0       	ldi	r24, 0x0A	; 10
 1a6:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 1aa:	c1 fb       	bst	r28, 1
 1ac:	66 27       	eor	r22, r22
 1ae:	60 f9       	bld	r22, 0
 1b0:	89 e0       	ldi	r24, 0x09	; 9
 1b2:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 1b6:	6c 2f       	mov	r22, r28
 1b8:	61 70       	andi	r22, 0x01	; 1
 1ba:	88 e0       	ldi	r24, 0x08	; 8
 1bc:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 1c0:	61 e0       	ldi	r22, 0x01	; 1
 1c2:	82 e0       	ldi	r24, 0x02	; 2
 1c4:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 1c8:	8f e9       	ldi	r24, 0x9F	; 159
 1ca:	9f e0       	ldi	r25, 0x0F	; 15
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <WriteIns+0xa0>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <WriteIns+0xa6>
 1d2:	00 00       	nop
 1d4:	60 e0       	ldi	r22, 0x00	; 0
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 1dc:	8f e9       	ldi	r24, 0x9F	; 159
 1de:	9f e0       	ldi	r25, 0x0F	; 15
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <WriteIns+0xb4>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <WriteIns+0xba>
 1e6:	00 00       	nop
 1e8:	cf 91       	pop	r28
 1ea:	08 95       	ret

000001ec <WriteData>:
 1ec:	cf 93       	push	r28
 1ee:	c8 2f       	mov	r28, r24
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	83 e0       	ldi	r24, 0x03	; 3
 1f4:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 1f8:	6c 2f       	mov	r22, r28
 1fa:	66 1f       	adc	r22, r22
 1fc:	66 27       	eor	r22, r22
 1fe:	66 1f       	adc	r22, r22
 200:	8c e0       	ldi	r24, 0x0C	; 12
 202:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 206:	c6 fb       	bst	r28, 6
 208:	66 27       	eor	r22, r22
 20a:	60 f9       	bld	r22, 0
 20c:	8a e0       	ldi	r24, 0x0A	; 10
 20e:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 212:	c5 fb       	bst	r28, 5
 214:	66 27       	eor	r22, r22
 216:	60 f9       	bld	r22, 0
 218:	89 e0       	ldi	r24, 0x09	; 9
 21a:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 21e:	c4 fb       	bst	r28, 4
 220:	66 27       	eor	r22, r22
 222:	60 f9       	bld	r22, 0
 224:	88 e0       	ldi	r24, 0x08	; 8
 226:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 22a:	61 e0       	ldi	r22, 0x01	; 1
 22c:	82 e0       	ldi	r24, 0x02	; 2
 22e:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 232:	8f e9       	ldi	r24, 0x9F	; 159
 234:	9f e0       	ldi	r25, 0x0F	; 15
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <WriteData+0x4a>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <WriteData+0x50>
 23c:	00 00       	nop
 23e:	60 e0       	ldi	r22, 0x00	; 0
 240:	82 e0       	ldi	r24, 0x02	; 2
 242:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 246:	8f e9       	ldi	r24, 0x9F	; 159
 248:	9f e0       	ldi	r25, 0x0F	; 15
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <WriteData+0x5e>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <WriteData+0x64>
 250:	00 00       	nop
 252:	c3 fb       	bst	r28, 3
 254:	66 27       	eor	r22, r22
 256:	60 f9       	bld	r22, 0
 258:	8c e0       	ldi	r24, 0x0C	; 12
 25a:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 25e:	c2 fb       	bst	r28, 2
 260:	66 27       	eor	r22, r22
 262:	60 f9       	bld	r22, 0
 264:	8a e0       	ldi	r24, 0x0A	; 10
 266:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 26a:	c1 fb       	bst	r28, 1
 26c:	66 27       	eor	r22, r22
 26e:	60 f9       	bld	r22, 0
 270:	89 e0       	ldi	r24, 0x09	; 9
 272:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 276:	6c 2f       	mov	r22, r28
 278:	61 70       	andi	r22, 0x01	; 1
 27a:	88 e0       	ldi	r24, 0x08	; 8
 27c:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 288:	8f e9       	ldi	r24, 0x9F	; 159
 28a:	9f e0       	ldi	r25, 0x0F	; 15
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <WriteData+0xa0>
 290:	00 c0       	rjmp	.+0      	; 0x292 <WriteData+0xa6>
 292:	00 00       	nop
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	82 e0       	ldi	r24, 0x02	; 2
 298:	0e 94 c5 02 	call	0x58a	; 0x58a <DIO_WritePin>
 29c:	8f e9       	ldi	r24, 0x9F	; 159
 29e:	9f e0       	ldi	r25, 0x0F	; 15
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <WriteData+0xb4>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <WriteData+0xba>
 2a6:	00 00       	nop
 2a8:	cf 91       	pop	r28
 2aa:	08 95       	ret

000002ac <LCD_Init>:
 2ac:	2f e7       	ldi	r18, 0x7F	; 127
 2ae:	85 eb       	ldi	r24, 0xB5	; 181
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	21 50       	subi	r18, 0x01	; 1
 2b4:	80 40       	sbci	r24, 0x00	; 0
 2b6:	90 40       	sbci	r25, 0x00	; 0
 2b8:	e1 f7       	brne	.-8      	; 0x2b2 <LCD_Init+0x6>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <LCD_Init+0x10>
 2bc:	00 00       	nop
 2be:	82 e0       	ldi	r24, 0x02	; 2
 2c0:	0e 94 96 00 	call	0x12c	; 0x12c <WriteIns>
 2c4:	88 e2       	ldi	r24, 0x28	; 40
 2c6:	0e 94 96 00 	call	0x12c	; 0x12c <WriteIns>
 2ca:	8c e0       	ldi	r24, 0x0C	; 12
 2cc:	0e 94 96 00 	call	0x12c	; 0x12c <WriteIns>
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	0e 94 96 00 	call	0x12c	; 0x12c <WriteIns>
 2d6:	8f e9       	ldi	r24, 0x9F	; 159
 2d8:	9f e0       	ldi	r25, 0x0F	; 15
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <LCD_Init+0x2e>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <LCD_Init+0x34>
 2e0:	00 00       	nop
 2e2:	86 e0       	ldi	r24, 0x06	; 6
 2e4:	0e 94 96 00 	call	0x12c	; 0x12c <WriteIns>
 2e8:	08 95       	ret

000002ea <LCD_WriteChar>:
	
}

void LCD_WriteChar(uint8_t ch)
{
	WriteData(ch);
 2ea:	0e 94 f6 00 	call	0x1ec	; 0x1ec <WriteData>
 2ee:	08 95       	ret

000002f0 <main>:

uint8_t key = NO_PRESSED_KEY;

int main()
{
	DIO_Init();
 2f0:	0e 94 82 02 	call	0x504	; 0x504 <DIO_Init>
	DIO_Init();
 2f4:	0e 94 82 02 	call	0x504	; 0x504 <DIO_Init>
	LCD_Init();
 2f8:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Init>
	
	
	while(1)
	{
		key = KEYPAD_GetKey();
 2fc:	0e 94 41 00 	call	0x82	; 0x82 <KEYPAD_GetKey>
 300:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <key>
		LCD_WriteChar(key);
 304:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_WriteChar>
 308:	f9 cf       	rjmp	.-14     	; 0x2fc <main+0xc>

0000030a <DIO_InitPin>:
	}
}

void DIO_InitPin(DIO_PinType pin ,DIO_PinStatus status)
{
	uint8_t pin_num = pin%8;
 30a:	98 2f       	mov	r25, r24
 30c:	97 70       	andi	r25, 0x07	; 7
	DIO_PortType port =pin/8;
 30e:	86 95       	lsr	r24
 310:	86 95       	lsr	r24
 312:	86 95       	lsr	r24
	switch(status)
 314:	61 30       	cpi	r22, 0x01	; 1
 316:	09 f4       	brne	.+2      	; 0x31a <DIO_InitPin+0x10>
 318:	55 c0       	rjmp	.+170    	; 0x3c4 <DIO_InitPin+0xba>
 31a:	20 f0       	brcs	.+8      	; 0x324 <DIO_InitPin+0x1a>
 31c:	62 30       	cpi	r22, 0x02	; 2
 31e:	09 f4       	brne	.+2      	; 0x322 <DIO_InitPin+0x18>
 320:	a1 c0       	rjmp	.+322    	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 322:	08 95       	ret
	{
		case OUTPUT:
		switch(port)
 324:	81 30       	cpi	r24, 0x01	; 1
 326:	c1 f0       	breq	.+48     	; 0x358 <DIO_InitPin+0x4e>
 328:	28 f0       	brcs	.+10     	; 0x334 <DIO_InitPin+0x2a>
 32a:	82 30       	cpi	r24, 0x02	; 2
 32c:	39 f1       	breq	.+78     	; 0x37c <DIO_InitPin+0x72>
 32e:	83 30       	cpi	r24, 0x03	; 3
 330:	b9 f1       	breq	.+110    	; 0x3a0 <DIO_InitPin+0x96>
 332:	08 95       	ret
		{
			case PA:
			SET_BIT(DDRA,pin_num);
 334:	4a b3       	in	r20, 0x1a	; 26
 336:	21 e0       	ldi	r18, 0x01	; 1
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	b9 01       	movw	r22, r18
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_InitPin+0x38>
 33e:	66 0f       	add	r22, r22
 340:	77 1f       	adc	r23, r23
 342:	9a 95       	dec	r25
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_InitPin+0x34>
 346:	cb 01       	movw	r24, r22
 348:	94 2f       	mov	r25, r20
 34a:	98 2b       	or	r25, r24
 34c:	9a bb       	out	0x1a, r25	; 26
			CLR_BIT(PORTA,pin_num);
 34e:	9b b3       	in	r25, 0x1b	; 27
 350:	80 95       	com	r24
 352:	89 23       	and	r24, r25
 354:	8b bb       	out	0x1b, r24	; 27
			break;
 356:	08 95       	ret
			case PB:
			SET_BIT(DDRB,pin_num);
 358:	47 b3       	in	r20, 0x17	; 23
 35a:	21 e0       	ldi	r18, 0x01	; 1
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	b9 01       	movw	r22, r18
 360:	02 c0       	rjmp	.+4      	; 0x366 <DIO_InitPin+0x5c>
 362:	66 0f       	add	r22, r22
 364:	77 1f       	adc	r23, r23
 366:	9a 95       	dec	r25
 368:	e2 f7       	brpl	.-8      	; 0x362 <DIO_InitPin+0x58>
 36a:	cb 01       	movw	r24, r22
 36c:	94 2f       	mov	r25, r20
 36e:	98 2b       	or	r25, r24
 370:	97 bb       	out	0x17, r25	; 23
			CLR_BIT(PORTB,pin_num);
 372:	98 b3       	in	r25, 0x18	; 24
 374:	80 95       	com	r24
 376:	89 23       	and	r24, r25
 378:	88 bb       	out	0x18, r24	; 24
			break;
 37a:	08 95       	ret
			case PC:
			SET_BIT(DDRC,pin_num);
 37c:	44 b3       	in	r20, 0x14	; 20
 37e:	21 e0       	ldi	r18, 0x01	; 1
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	b9 01       	movw	r22, r18
 384:	02 c0       	rjmp	.+4      	; 0x38a <DIO_InitPin+0x80>
 386:	66 0f       	add	r22, r22
 388:	77 1f       	adc	r23, r23
 38a:	9a 95       	dec	r25
 38c:	e2 f7       	brpl	.-8      	; 0x386 <DIO_InitPin+0x7c>
 38e:	cb 01       	movw	r24, r22
 390:	94 2f       	mov	r25, r20
 392:	98 2b       	or	r25, r24
 394:	94 bb       	out	0x14, r25	; 20
			CLR_BIT(PORTC,pin_num);
 396:	95 b3       	in	r25, 0x15	; 21
 398:	80 95       	com	r24
 39a:	89 23       	and	r24, r25
 39c:	85 bb       	out	0x15, r24	; 21
			break;
 39e:	08 95       	ret
			case PD:
			SET_BIT(DDRD,pin_num);
 3a0:	41 b3       	in	r20, 0x11	; 17
 3a2:	21 e0       	ldi	r18, 0x01	; 1
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	b9 01       	movw	r22, r18
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <DIO_InitPin+0xa4>
 3aa:	66 0f       	add	r22, r22
 3ac:	77 1f       	adc	r23, r23
 3ae:	9a 95       	dec	r25
 3b0:	e2 f7       	brpl	.-8      	; 0x3aa <DIO_InitPin+0xa0>
 3b2:	cb 01       	movw	r24, r22
 3b4:	94 2f       	mov	r25, r20
 3b6:	98 2b       	or	r25, r24
 3b8:	91 bb       	out	0x11, r25	; 17
			CLR_BIT(PORTD,pin_num);
 3ba:	92 b3       	in	r25, 0x12	; 18
 3bc:	80 95       	com	r24
 3be:	89 23       	and	r24, r25
 3c0:	82 bb       	out	0x12, r24	; 18
			break;
 3c2:	08 95       	ret
			
		}
		break;
		case INFREE:
		switch(port)
 3c4:	81 30       	cpi	r24, 0x01	; 1
 3c6:	c1 f0       	breq	.+48     	; 0x3f8 <DIO_InitPin+0xee>
 3c8:	28 f0       	brcs	.+10     	; 0x3d4 <DIO_InitPin+0xca>
 3ca:	82 30       	cpi	r24, 0x02	; 2
 3cc:	39 f1       	breq	.+78     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3ce:	83 30       	cpi	r24, 0x03	; 3
 3d0:	b9 f1       	breq	.+110    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3d2:	08 95       	ret
		{
			case PA:
			CLR_BIT(DDRA,pin_num);
 3d4:	4a b3       	in	r20, 0x1a	; 26
 3d6:	21 e0       	ldi	r18, 0x01	; 1
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	b9 01       	movw	r22, r18
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <DIO_InitPin+0xd8>
 3de:	66 0f       	add	r22, r22
 3e0:	77 1f       	adc	r23, r23
 3e2:	9a 95       	dec	r25
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <DIO_InitPin+0xd4>
 3e6:	cb 01       	movw	r24, r22
 3e8:	80 95       	com	r24
 3ea:	94 2f       	mov	r25, r20
 3ec:	98 23       	and	r25, r24
 3ee:	9a bb       	out	0x1a, r25	; 26
			CLR_BIT(PORTA,pin_num);
 3f0:	9b b3       	in	r25, 0x1b	; 27
 3f2:	89 23       	and	r24, r25
 3f4:	8b bb       	out	0x1b, r24	; 27
			break;
 3f6:	08 95       	ret
			case PB:
			CLR_BIT(DDRB,pin_num);
 3f8:	47 b3       	in	r20, 0x17	; 23
 3fa:	21 e0       	ldi	r18, 0x01	; 1
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	b9 01       	movw	r22, r18
 400:	02 c0       	rjmp	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	66 0f       	add	r22, r22
 404:	77 1f       	adc	r23, r23
 406:	9a 95       	dec	r25
 408:	e2 f7       	brpl	.-8      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 40a:	cb 01       	movw	r24, r22
 40c:	80 95       	com	r24
 40e:	94 2f       	mov	r25, r20
 410:	98 23       	and	r25, r24
 412:	97 bb       	out	0x17, r25	; 23
			CLR_BIT(PORTB,pin_num);
 414:	98 b3       	in	r25, 0x18	; 24
 416:	89 23       	and	r24, r25
 418:	88 bb       	out	0x18, r24	; 24
			break;
 41a:	08 95       	ret
			case PC:
			CLR_BIT(DDRC,pin_num);
 41c:	44 b3       	in	r20, 0x14	; 20
 41e:	21 e0       	ldi	r18, 0x01	; 1
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	b9 01       	movw	r22, r18
 424:	02 c0       	rjmp	.+4      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 426:	66 0f       	add	r22, r22
 428:	77 1f       	adc	r23, r23
 42a:	9a 95       	dec	r25
 42c:	e2 f7       	brpl	.-8      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 42e:	cb 01       	movw	r24, r22
 430:	80 95       	com	r24
 432:	94 2f       	mov	r25, r20
 434:	98 23       	and	r25, r24
 436:	94 bb       	out	0x14, r25	; 20
			CLR_BIT(PORTC,pin_num);
 438:	95 b3       	in	r25, 0x15	; 21
 43a:	89 23       	and	r24, r25
 43c:	85 bb       	out	0x15, r24	; 21
			break;
 43e:	08 95       	ret
			case PD:
			CLR_BIT(DDRD,pin_num);
 440:	41 b3       	in	r20, 0x11	; 17
 442:	21 e0       	ldi	r18, 0x01	; 1
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	b9 01       	movw	r22, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 44a:	66 0f       	add	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	9a 95       	dec	r25
 450:	e2 f7       	brpl	.-8      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 452:	cb 01       	movw	r24, r22
 454:	80 95       	com	r24
 456:	94 2f       	mov	r25, r20
 458:	98 23       	and	r25, r24
 45a:	91 bb       	out	0x11, r25	; 17
			CLR_BIT(PORTD,pin_num);
 45c:	92 b3       	in	r25, 0x12	; 18
 45e:	89 23       	and	r24, r25
 460:	82 bb       	out	0x12, r24	; 18
			break;
 462:	08 95       	ret
			
		}
		break;
		case INPULL:
		switch(port)
 464:	81 30       	cpi	r24, 0x01	; 1
 466:	c1 f0       	breq	.+48     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 468:	28 f0       	brcs	.+10     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 46a:	82 30       	cpi	r24, 0x02	; 2
 46c:	39 f1       	breq	.+78     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 46e:	83 30       	cpi	r24, 0x03	; 3
 470:	b9 f1       	breq	.+110    	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 472:	08 95       	ret
		{
			case PA:
			CLR_BIT(DDRA,pin_num);
 474:	4a b3       	in	r20, 0x1a	; 26
 476:	21 e0       	ldi	r18, 0x01	; 1
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	b9 01       	movw	r22, r18
 47c:	02 c0       	rjmp	.+4      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 47e:	66 0f       	add	r22, r22
 480:	77 1f       	adc	r23, r23
 482:	9a 95       	dec	r25
 484:	e2 f7       	brpl	.-8      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 486:	cb 01       	movw	r24, r22
 488:	96 2f       	mov	r25, r22
 48a:	90 95       	com	r25
 48c:	94 23       	and	r25, r20
 48e:	9a bb       	out	0x1a, r25	; 26
			SET_BIT(PORTA,pin_num);
 490:	9b b3       	in	r25, 0x1b	; 27
 492:	89 2b       	or	r24, r25
 494:	8b bb       	out	0x1b, r24	; 27
			break;
 496:	08 95       	ret
			case PB:
			CLR_BIT(DDRB,pin_num);
 498:	47 b3       	in	r20, 0x17	; 23
 49a:	21 e0       	ldi	r18, 0x01	; 1
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	b9 01       	movw	r22, r18
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a2:	66 0f       	add	r22, r22
 4a4:	77 1f       	adc	r23, r23
 4a6:	9a 95       	dec	r25
 4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 4aa:	cb 01       	movw	r24, r22
 4ac:	96 2f       	mov	r25, r22
 4ae:	90 95       	com	r25
 4b0:	94 23       	and	r25, r20
 4b2:	97 bb       	out	0x17, r25	; 23
			SET_BIT(PORTB,pin_num);
 4b4:	98 b3       	in	r25, 0x18	; 24
 4b6:	89 2b       	or	r24, r25
 4b8:	88 bb       	out	0x18, r24	; 24
			break;
 4ba:	08 95       	ret
			case PC:
			CLR_BIT(DDRC,pin_num);
 4bc:	44 b3       	in	r20, 0x14	; 20
 4be:	21 e0       	ldi	r18, 0x01	; 1
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	b9 01       	movw	r22, r18
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4c6:	66 0f       	add	r22, r22
 4c8:	77 1f       	adc	r23, r23
 4ca:	9a 95       	dec	r25
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4ce:	cb 01       	movw	r24, r22
 4d0:	96 2f       	mov	r25, r22
 4d2:	90 95       	com	r25
 4d4:	94 23       	and	r25, r20
 4d6:	94 bb       	out	0x14, r25	; 20
			SET_BIT(PORTC,pin_num);
 4d8:	95 b3       	in	r25, 0x15	; 21
 4da:	89 2b       	or	r24, r25
 4dc:	85 bb       	out	0x15, r24	; 21
			break;
 4de:	08 95       	ret
			case PD:
			CLR_BIT(DDRD,pin_num);
 4e0:	41 b3       	in	r20, 0x11	; 17
 4e2:	21 e0       	ldi	r18, 0x01	; 1
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	b9 01       	movw	r22, r18
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4ea:	66 0f       	add	r22, r22
 4ec:	77 1f       	adc	r23, r23
 4ee:	9a 95       	dec	r25
 4f0:	e2 f7       	brpl	.-8      	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
 4f2:	cb 01       	movw	r24, r22
 4f4:	96 2f       	mov	r25, r22
 4f6:	90 95       	com	r25
 4f8:	94 23       	and	r25, r20
 4fa:	91 bb       	out	0x11, r25	; 17
			SET_BIT(PORTD,pin_num);
 4fc:	92 b3       	in	r25, 0x12	; 18
 4fe:	89 2b       	or	r24, r25
 500:	82 bb       	out	0x12, r24	; 18
 502:	08 95       	ret

00000504 <DIO_Init>:
	INPULL,		 /* Port D Pin 6 /   ICP*/
	INPULL		 /* Port D Pin 7 */
};

void DIO_Init(void)
{
 504:	cf 93       	push	r28
	DIO_PinType i;
	for (i=PINA0;i<TOTAL_PINS;i++)
 506:	c0 e0       	ldi	r28, 0x00	; 0
 508:	09 c0       	rjmp	.+18     	; 0x51c <DIO_Init+0x18>
	{
		DIO_InitPin(i,DIO_PinsStatusArr[i]);
 50a:	ec 2f       	mov	r30, r28
 50c:	f0 e0       	ldi	r31, 0x00	; 0
 50e:	ef 58       	subi	r30, 0x8F	; 143
 510:	ff 4f       	sbci	r31, 0xFF	; 255
 512:	60 81       	ld	r22, Z
 514:	8c 2f       	mov	r24, r28
 516:	0e 94 85 01 	call	0x30a	; 0x30a <DIO_InitPin>
};

void DIO_Init(void)
{
	DIO_PinType i;
	for (i=PINA0;i<TOTAL_PINS;i++)
 51a:	cf 5f       	subi	r28, 0xFF	; 255
 51c:	c0 32       	cpi	r28, 0x20	; 32
 51e:	a8 f3       	brcs	.-22     	; 0x50a <DIO_Init+0x6>
	{
		DIO_InitPin(i,DIO_PinsStatusArr[i]);
	}
}
 520:	cf 91       	pop	r28
 522:	08 95       	ret

00000524 <DIO_ReadPin>:
	}
}
DIO_VoltageType DIO_ReadPin (DIO_PinType pin)
{
	DIO_VoltageType volt=LOW;
	uint8_t pin_num =pin%8;
 524:	28 2f       	mov	r18, r24
 526:	27 70       	andi	r18, 0x07	; 7
	DIO_PortType port =pin/8;
 528:	86 95       	lsr	r24
 52a:	86 95       	lsr	r24
 52c:	86 95       	lsr	r24
	switch(port)
 52e:	81 30       	cpi	r24, 0x01	; 1
 530:	79 f0       	breq	.+30     	; 0x550 <DIO_ReadPin+0x2c>
 532:	28 f0       	brcs	.+10     	; 0x53e <DIO_ReadPin+0x1a>
 534:	82 30       	cpi	r24, 0x02	; 2
 536:	a9 f0       	breq	.+42     	; 0x562 <DIO_ReadPin+0x3e>
 538:	83 30       	cpi	r24, 0x03	; 3
 53a:	e1 f0       	breq	.+56     	; 0x574 <DIO_ReadPin+0x50>
 53c:	24 c0       	rjmp	.+72     	; 0x586 <DIO_ReadPin+0x62>
	{
		case PA:
		volt=READ_BIT(PINA,pin_num);
 53e:	89 b3       	in	r24, 0x19	; 25
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_ReadPin+0x24>
 544:	95 95       	asr	r25
 546:	87 95       	ror	r24
 548:	2a 95       	dec	r18
 54a:	e2 f7       	brpl	.-8      	; 0x544 <DIO_ReadPin+0x20>
 54c:	81 70       	andi	r24, 0x01	; 1
		break;
 54e:	08 95       	ret
		case PB:
		volt=READ_BIT(PINB,pin_num);
 550:	86 b3       	in	r24, 0x16	; 22
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <DIO_ReadPin+0x36>
 556:	95 95       	asr	r25
 558:	87 95       	ror	r24
 55a:	2a 95       	dec	r18
 55c:	e2 f7       	brpl	.-8      	; 0x556 <DIO_ReadPin+0x32>
 55e:	81 70       	andi	r24, 0x01	; 1
		break;
 560:	08 95       	ret
		case PC:
		volt=READ_BIT(PINC,pin_num);
 562:	83 b3       	in	r24, 0x13	; 19
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	02 c0       	rjmp	.+4      	; 0x56c <DIO_ReadPin+0x48>
 568:	95 95       	asr	r25
 56a:	87 95       	ror	r24
 56c:	2a 95       	dec	r18
 56e:	e2 f7       	brpl	.-8      	; 0x568 <DIO_ReadPin+0x44>
 570:	81 70       	andi	r24, 0x01	; 1
		break;
 572:	08 95       	ret
		case PD:
		volt=READ_BIT(PIND,pin_num);
 574:	80 b3       	in	r24, 0x10	; 16
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	02 c0       	rjmp	.+4      	; 0x57e <DIO_ReadPin+0x5a>
 57a:	95 95       	asr	r25
 57c:	87 95       	ror	r24
 57e:	2a 95       	dec	r18
 580:	e2 f7       	brpl	.-8      	; 0x57a <DIO_ReadPin+0x56>
 582:	81 70       	andi	r24, 0x01	; 1
		break;
 584:	08 95       	ret
		
	}
}
DIO_VoltageType DIO_ReadPin (DIO_PinType pin)
{
	DIO_VoltageType volt=LOW;
 586:	80 e0       	ldi	r24, 0x00	; 0
		volt=READ_BIT(PIND,pin_num);
		break;
		
	}
	return volt;
}
 588:	08 95       	ret

0000058a <DIO_WritePin>:
void DIO_WritePin (DIO_PinType pin,DIO_VoltageType volt)
{
	uint8_t pin_num =pin%8;
 58a:	98 2f       	mov	r25, r24
 58c:	97 70       	andi	r25, 0x07	; 7
	DIO_PortType port =pin/8;
 58e:	86 95       	lsr	r24
 590:	86 95       	lsr	r24
 592:	86 95       	lsr	r24
	if (volt==HIGH)
 594:	61 30       	cpi	r22, 0x01	; 1
 596:	e1 f5       	brne	.+120    	; 0x610 <DIO_WritePin+0x86>
	{
		switch(port)
 598:	81 30       	cpi	r24, 0x01	; 1
 59a:	99 f0       	breq	.+38     	; 0x5c2 <DIO_WritePin+0x38>
 59c:	28 f0       	brcs	.+10     	; 0x5a8 <DIO_WritePin+0x1e>
 59e:	82 30       	cpi	r24, 0x02	; 2
 5a0:	e9 f0       	breq	.+58     	; 0x5dc <DIO_WritePin+0x52>
 5a2:	83 30       	cpi	r24, 0x03	; 3
 5a4:	41 f1       	breq	.+80     	; 0x5f6 <DIO_WritePin+0x6c>
 5a6:	08 95       	ret
		{
			case PA:
			SET_BIT(PORTA,pin_num);
 5a8:	4b b3       	in	r20, 0x1b	; 27
 5aa:	21 e0       	ldi	r18, 0x01	; 1
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	b9 01       	movw	r22, r18
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <DIO_WritePin+0x2c>
 5b2:	66 0f       	add	r22, r22
 5b4:	77 1f       	adc	r23, r23
 5b6:	9a 95       	dec	r25
 5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <DIO_WritePin+0x28>
 5ba:	cb 01       	movw	r24, r22
 5bc:	84 2b       	or	r24, r20
 5be:	8b bb       	out	0x1b, r24	; 27
			break;
 5c0:	08 95       	ret
			case PB:
			SET_BIT(PORTB,pin_num);
 5c2:	48 b3       	in	r20, 0x18	; 24
 5c4:	21 e0       	ldi	r18, 0x01	; 1
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	b9 01       	movw	r22, r18
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <DIO_WritePin+0x46>
 5cc:	66 0f       	add	r22, r22
 5ce:	77 1f       	adc	r23, r23
 5d0:	9a 95       	dec	r25
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <DIO_WritePin+0x42>
 5d4:	cb 01       	movw	r24, r22
 5d6:	84 2b       	or	r24, r20
 5d8:	88 bb       	out	0x18, r24	; 24
			break;
 5da:	08 95       	ret
			case PC:
			SET_BIT(PORTC,pin_num);
 5dc:	45 b3       	in	r20, 0x15	; 21
 5de:	21 e0       	ldi	r18, 0x01	; 1
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	b9 01       	movw	r22, r18
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_WritePin+0x60>
 5e6:	66 0f       	add	r22, r22
 5e8:	77 1f       	adc	r23, r23
 5ea:	9a 95       	dec	r25
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_WritePin+0x5c>
 5ee:	cb 01       	movw	r24, r22
 5f0:	84 2b       	or	r24, r20
 5f2:	85 bb       	out	0x15, r24	; 21
			break;
 5f4:	08 95       	ret
			case PD:
			SET_BIT(PORTD,pin_num);
 5f6:	42 b3       	in	r20, 0x12	; 18
 5f8:	21 e0       	ldi	r18, 0x01	; 1
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	b9 01       	movw	r22, r18
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <DIO_WritePin+0x7a>
 600:	66 0f       	add	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	9a 95       	dec	r25
 606:	e2 f7       	brpl	.-8      	; 0x600 <DIO_WritePin+0x76>
 608:	cb 01       	movw	r24, r22
 60a:	84 2b       	or	r24, r20
 60c:	82 bb       	out	0x12, r24	; 18
			break;
 60e:	08 95       	ret
			
		}
	}
	else
	{
		switch(port)
 610:	81 30       	cpi	r24, 0x01	; 1
 612:	a1 f0       	breq	.+40     	; 0x63c <DIO_WritePin+0xb2>
 614:	28 f0       	brcs	.+10     	; 0x620 <DIO_WritePin+0x96>
 616:	82 30       	cpi	r24, 0x02	; 2
 618:	f9 f0       	breq	.+62     	; 0x658 <DIO_WritePin+0xce>
 61a:	83 30       	cpi	r24, 0x03	; 3
 61c:	59 f1       	breq	.+86     	; 0x674 <DIO_WritePin+0xea>
 61e:	08 95       	ret
		{
			case PA:
			CLR_BIT(PORTA,pin_num);
 620:	4b b3       	in	r20, 0x1b	; 27
 622:	21 e0       	ldi	r18, 0x01	; 1
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	b9 01       	movw	r22, r18
 628:	02 c0       	rjmp	.+4      	; 0x62e <DIO_WritePin+0xa4>
 62a:	66 0f       	add	r22, r22
 62c:	77 1f       	adc	r23, r23
 62e:	9a 95       	dec	r25
 630:	e2 f7       	brpl	.-8      	; 0x62a <DIO_WritePin+0xa0>
 632:	cb 01       	movw	r24, r22
 634:	80 95       	com	r24
 636:	84 23       	and	r24, r20
 638:	8b bb       	out	0x1b, r24	; 27
			break;
 63a:	08 95       	ret
			case PB:
			CLR_BIT(PORTB,pin_num);
 63c:	48 b3       	in	r20, 0x18	; 24
 63e:	21 e0       	ldi	r18, 0x01	; 1
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	b9 01       	movw	r22, r18
 644:	02 c0       	rjmp	.+4      	; 0x64a <DIO_WritePin+0xc0>
 646:	66 0f       	add	r22, r22
 648:	77 1f       	adc	r23, r23
 64a:	9a 95       	dec	r25
 64c:	e2 f7       	brpl	.-8      	; 0x646 <DIO_WritePin+0xbc>
 64e:	cb 01       	movw	r24, r22
 650:	80 95       	com	r24
 652:	84 23       	and	r24, r20
 654:	88 bb       	out	0x18, r24	; 24
			break;
 656:	08 95       	ret
			case PC:
			CLR_BIT(PORTC,pin_num);
 658:	45 b3       	in	r20, 0x15	; 21
 65a:	21 e0       	ldi	r18, 0x01	; 1
 65c:	30 e0       	ldi	r19, 0x00	; 0
 65e:	b9 01       	movw	r22, r18
 660:	02 c0       	rjmp	.+4      	; 0x666 <DIO_WritePin+0xdc>
 662:	66 0f       	add	r22, r22
 664:	77 1f       	adc	r23, r23
 666:	9a 95       	dec	r25
 668:	e2 f7       	brpl	.-8      	; 0x662 <DIO_WritePin+0xd8>
 66a:	cb 01       	movw	r24, r22
 66c:	80 95       	com	r24
 66e:	84 23       	and	r24, r20
 670:	85 bb       	out	0x15, r24	; 21
			break;
 672:	08 95       	ret
			case PD:
			CLR_BIT(PORTD,pin_num);
 674:	42 b3       	in	r20, 0x12	; 18
 676:	21 e0       	ldi	r18, 0x01	; 1
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	b9 01       	movw	r22, r18
 67c:	02 c0       	rjmp	.+4      	; 0x682 <DIO_WritePin+0xf8>
 67e:	66 0f       	add	r22, r22
 680:	77 1f       	adc	r23, r23
 682:	9a 95       	dec	r25
 684:	e2 f7       	brpl	.-8      	; 0x67e <DIO_WritePin+0xf4>
 686:	cb 01       	movw	r24, r22
 688:	80 95       	com	r24
 68a:	84 23       	and	r24, r20
 68c:	82 bb       	out	0x12, r24	; 18
 68e:	08 95       	ret

00000690 <_exit>:
 690:	f8 94       	cli

00000692 <__stop_program>:
 692:	ff cf       	rjmp	.-2      	; 0x692 <__stop_program>
